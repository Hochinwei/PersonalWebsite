[
  {
    "objectID": "projects/project_2/index.html",
    "href": "projects/project_2/index.html",
    "title": "project_2",
    "section": "",
    "text": "In this project I work on Machine Learning methods to predict in-hospital mortality."
  },
  {
    "objectID": "projects/pkg_2/index.html",
    "href": "projects/pkg_2/index.html",
    "title": "pkg_2",
    "section": "",
    "text": "This package does this."
  },
  {
    "objectID": "projects/LinkedIn_games/Tango_analysis.html",
    "href": "projects/LinkedIn_games/Tango_analysis.html",
    "title": "LinkedIn games analysis pipeline",
    "section": "",
    "text": "This is a personal project to create a live analysis pipeline that will show descriptive analysis of daily LinkedIn games records between PM and CW.\nThis pipeline will serve to elucidate who is the better overall player in LinkedIn games (Tango, Zip, Pinpoint and Cross climb) to date; between players PM and CW. Beginning from April 29th till today, June 14, 2025, data will continually be updated manually in the raw .xlsx file and ran through the pipeline for analysis when rendered.\nIn addition to summarizing means, medians, standard deviations, and visualizing score distributions over time, this document also employs Bayesian independent‐samples t‐tests for each game type to quantify the strength of evidence for performance differences between PM and CW. In each case, Bayes factors (BF10) is computed along with prior and posterior distributions plotted to illustrate how observed data update our beliefs about any effect (see Note 1 below).\nThis document aims to describe, visualize, and evaluate, using both descriptive statistics and Bayesian hypothesis tests, to assess the differences in scores between the two players.\n# Libraries utilized\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(car)\nlibrary(patchwork)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(BayesFactor)\n\n# Load the data in\ndat &lt;- read_xlsx(\"LinkedIn_games_data.xlsx\")\nTo account for missing data (e.g., failure to complete Pinpoint guesses), “-” will be recoded into N.A. and listwise deletion will be conducted to remove the data for the day. Additionally, since the data is manually entered, it is recorded in wide format. The code below pivots the wide format into long format, which is simpler for analysis.\nShow the code\n# Convert \"-\" into NA and all columns into double\ndat &lt;- dat %&gt;% \n  mutate(across(where(is.character), ~ na_if(., \"-\"))) %&gt;% \n  mutate(across(where(is.character), as.double)) \n\n# Change to long format\ndat_long &lt;- dat %&gt;% \n  pivot_longer(\n    cols = -date,\n    names_to = c(\"Player\", \"Game_type\"),\n    names_sep = \"_\",\n    values_to = \"value\"\n  )"
  },
  {
    "objectID": "projects/LinkedIn_games/Tango_analysis.html#homogenity-of-variance-assumptions",
    "href": "projects/LinkedIn_games/Tango_analysis.html#homogenity-of-variance-assumptions",
    "title": "LinkedIn games analysis pipeline",
    "section": "Homogenity of Variance Assumptions",
    "text": "Homogenity of Variance Assumptions\nRuns Levene’s test as a check of homogenity of variance for each game type subsets. Although Bayesian t‐tests are typically robust to mild heterogeneity of variance, it remains good practice to understand whether this assumption might be violated.\n\nTangoZipPinpointCrossclimb\n\n\n\n\nShow the code\n# Levene's test of homogenity of variance\nlevene_T &lt;- leveneTest(value ~ as.factor(Player), data = dat_longT)\nlevene_T_df &lt;- as.data.frame(levene_T)\n\n# Clean up df formatting\nlevene_T_df &lt;- levene_T_df %&gt;% \n  mutate(\n    `Df` = Df,\n    `F Value` = round(`F value`, 3),\n    `Pr(&gt;F)` = signif(`Pr(&gt;F)`, 3)\n  ) %&gt;% \n  select(`Df`, `F Value`, `Pr(&gt;F)`)\n\n# Create Clean table\nlevene_T_df %&gt;% \n  kable(\n    caption = \"Levene’s Test for Homogeneity of Variance\",\n    col.names = c(\"Degrees of Freedom\", \"F Statistic\", \"p-value\"),\n    format = \"html\"\n  ) %&gt;% \n  kable_styling(full_width = FALSE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\")) \n\n\n\nLevene’s Test for Homogeneity of Variance\n\n\n\nDegrees of Freedom\nF Statistic\np-value\n\n\n\n\ngroup\n1\n0.482\n0.49\n\n\n\n75\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n# Levene's test of homogenity of variance\nlevene_Z &lt;- leveneTest(value ~ as.factor(Player), data = dat_longZ)\nlevene_Z_df &lt;- as.data.frame(levene_Z)\n\n# Clean up df formatting\nlevene_Z_df &lt;- levene_Z_df %&gt;% \n  mutate(\n    `Df` = Df,\n    `F Value` = round(`F value`, 3),\n    `Pr(&gt;F)` = signif(`Pr(&gt;F)`, 3)\n  ) %&gt;% \n  select(`Df`, `F Value`, `Pr(&gt;F)`)\n\n# Create Clean table\nlevene_Z_df %&gt;% \n  kable(\n    caption = \"Levene’s Test for Homogeneity of Variance\",\n    col.names = c(\"Degrees of Freedom\", \"F Statistic\", \"p-value\"),\n    format = \"html\"\n  ) %&gt;% \n  kable_styling(full_width = FALSE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\"))\n\n\n\nLevene’s Test for Homogeneity of Variance\n\n\n\nDegrees of Freedom\nF Statistic\np-value\n\n\n\n\ngroup\n1\n0.174\n0.678\n\n\n\n75\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n# Levene's test of homogenity of variance\nlevene_P &lt;- leveneTest(value ~ as.factor(Player), data = dat_longP)\nlevene_P_df &lt;- as.data.frame(levene_P)\n\n# Clean up df formatting\nlevene_P_df &lt;- levene_P_df %&gt;% \n  mutate(\n    `Df` = Df,\n    `F Value` = round(`F value`, 3),\n    `Pr(&gt;F)` = signif(`Pr(&gt;F)`, 3)\n  ) %&gt;% \n  select(`Df`, `F Value`, `Pr(&gt;F)`)\n\n# Create Clean table\nlevene_P_df %&gt;% \n  kable(\n    caption = \"Levene’s Test for Homogeneity of Variance\",\n    col.names = c(\"Degrees of Freedom\", \"F Statistic\", \"p-value\"),\n    format = \"html\"\n  ) %&gt;% \n  kable_styling(full_width = FALSE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\"))\n\n\n\nLevene’s Test for Homogeneity of Variance\n\n\n\nDegrees of Freedom\nF Statistic\np-value\n\n\n\n\ngroup\n1\n0.234\n0.63\n\n\n\n72\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n# Levene's test of homogenity of variance\nlevene_C &lt;- leveneTest(value ~ as.factor(Player), data = dat_longC)\nlevene_C_df &lt;- as.data.frame(levene_C)\n\n# Clean up df formatting\nlevene_C_df &lt;- levene_C_df %&gt;% \n  mutate(\n    `Df` = Df,\n    `F Value` = round(`F value`, 3),\n    `Pr(&gt;F)` = signif(`Pr(&gt;F)`, 3)\n  ) %&gt;% \n  select(`Df`, `F Value`, `Pr(&gt;F)`)\n\n# Create Clean table\nlevene_C_df %&gt;% \n  kable(\n    caption = \"Levene’s Test for Homogeneity of Variance\",\n    col.names = c(\"Degrees of Freedom\", \"F Statistic\", \"p-value\"),\n    format = \"html\"\n  ) %&gt;% \n  kable_styling(full_width = FALSE, position = \"center\", bootstrap_options = c(\"striped\", \"hover\"))\n\n\n\nLevene’s Test for Homogeneity of Variance\n\n\n\nDegrees of Freedom\nF Statistic\np-value\n\n\n\n\ngroup\n1\n0.137\n0.712\n\n\n\n73\nNA\nNA"
  },
  {
    "objectID": "projects/LinkedIn_games/Tango_analysis.html#bayes-factor-computation",
    "href": "projects/LinkedIn_games/Tango_analysis.html#bayes-factor-computation",
    "title": "LinkedIn games analysis pipeline",
    "section": "Bayes Factor computation",
    "text": "Bayes Factor computation\n\nTangoZipPinpointCrossclimb\n\n\nBayes factor computation for Tango between PM and CW.\n\n\nShow the code\n# Filter out PM’s values (remove NA from 'value')\ntango_pm &lt;- dat_longT %&gt;%\n  filter(Player == \"PM\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Filter out CW’s values (remove NA from 'value')\ntango_cw &lt;- dat_longT %&gt;%\n  filter(Player == \"CW\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Run Bayesian two-sample t-test\nbf_obj_tango &lt;- ttestBF(\n  x = tango_pm,\n  y = tango_cw,\n  paired = FALSE\n)\n\n# extractBF() returns a data frame; the “bf” column is the numeric Bayes Factor\nbf_tango &lt;- extractBF(bf_obj_tango)$bf[1]\n\n# Build a simple one‐row data.frame for kable()\ndata.frame(\n  \"Game Type\" = \"Tango\",\n  \"BF10\"      = round(bf_tango, 3),\n  \"Notes\"     = if (bf_tango &gt; 1) {\n                   \"Evidence favoring difference (H1)\"\n                 } else {\n                   \"Evidence favoring H0 or inconclusive\"\n                 }\n) %&gt;%\n  # Display as HTML table with caption and styling\n  kable(\n    caption   = \"Bayesian independent‐samples t‐test (Tango)\",\n    col.names = c(\"Game Type\", \"BF₁₀\", \"Notes\"),\n    format    = \"html\"\n  ) %&gt;%\n  kable_styling(\n    full_width        = FALSE,\n    position          = \"center\",\n    bootstrap_options = c(\"striped\", \"hover\")\n  )\n\n\n\nBayesian independent‐samples t‐test (Tango)\n\n\nGame Type\nBF₁₀\nNotes\n\n\n\n\nTango\n0.479\nEvidence favoring H0 or inconclusive\n\n\n\n\n\n\n\nVisualizations of posterior and prior distributions.\n\n\nShow the code\n# Obtain 10,000 posterior samples of the standardized effect size (delta)\nposterior_samples_T &lt;- posterior(bf_obj_tango, iterations = 10000)\n\n# Convert to a data frame for easier handling\nposterior_df_T &lt;- as.data.frame(posterior_samples_T)\n\n# Create a sequence of effect size (delta) values for the prior\ndelta_range_T &lt;- seq(-3, 3, length.out = 1000)  # reasonable range for visualization\n\n# Compute the density of the default Cauchy prior (scale = 0.707)\nprior_density_T &lt;- dcauchy(delta_range_T, location = 0, scale = sqrt(2) / 2)\n\n# Create a data frame for the prior distribution\nprior_df_T &lt;- data.frame(\n  delta = delta_range_T,\n  density = prior_density_T,\n  Distribution = \"Prior\"\n)\n\n# Compute the density of the posterior samples\nposterior_density_T &lt;- density(posterior_df_T$delta, adjust = 1.5)  # adjust can be tuned for smoothing\n\nposterior_df_density_T &lt;- data.frame(\n  delta = posterior_density_T$x,\n  density = posterior_density_T$y,\n  Distribution = \"Posterior\"\n)\n\n# Combine prior and posterior data frames\ncombined_df_T &lt;- rbind(prior_df_T, posterior_df_density_T)\n\n# Plot both distributions\nggplot(combined_df_T, aes(x = delta, y = density, color = Distribution, fill = Distribution)) +\n  geom_line(size = 1) +\n  geom_area(alpha = 0.2, position = \"identity\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(\n    title = \"Prior and Posterior Distributions of Effect Size (δ)\",\n    subtitle = \"Tango: PM vs. CW\",\n    x = \"Effect Size (δ)\",\n    y = \"Density\"\n  ) +\n  scale_color_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  scale_fill_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n\nBayes factor computation for Zip.\n\n\nShow the code\n# Filter out PM’s values (remove NA from 'value')\nzip_pm &lt;- dat_longZ %&gt;%\n  filter(Player == \"PM\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Filter out CW’s values (remove NA from 'value')\nzip_cw &lt;- dat_longZ %&gt;%\n  filter(Player == \"CW\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Run Bayesian two-sample t-test\nbf_obj_zip &lt;- ttestBF(\n  x = zip_pm,\n  y = zip_cw,\n  paired = FALSE\n)\n\n# extractBF() returns a data frame; the “bf” column is the numeric Bayes Factor\nbf_zip &lt;- extractBF(bf_obj_zip)$bf[1]\n\n# Build a simple one‐row data.frame for kable()\ndata.frame(\n  \"Game Type\" = \"Zip\",\n  \"BF10\"      = round(bf_zip, 3),\n  \"Notes\"     = if (bf_zip &gt; 1) {\n                   \"Evidence favoring difference (H1)\"\n                 } else {\n                   \"Evidence favoring H0 or inconclusive\"\n                 }\n) %&gt;%\n  # Display as HTML table with caption and styling\n  kable(\n    caption   = \"Bayesian independent‐samples t‐test (Zip)\",\n    col.names = c(\"Game Type\", \"BF₁₀\", \"Notes\"),\n    format    = \"html\"\n  ) %&gt;%\n  kable_styling(\n    full_width        = FALSE,\n    position          = \"center\",\n    bootstrap_options = c(\"striped\", \"hover\")\n  )\n\n\n\nBayesian independent‐samples t‐test (Zip)\n\n\nGame Type\nBF₁₀\nNotes\n\n\n\n\nZip\n0.26\nEvidence favoring H0 or inconclusive\n\n\n\n\n\n\n\nVisualizations of posterior and prior distributions.\n\n\nShow the code\n# Obtain 10,000 posterior samples of the standardized effect size (delta)\nposterior_samples_Z &lt;- posterior(bf_obj_zip, iterations = 10000)\n\n# Convert to a data frame for easier handling\nposterior_df_Z &lt;- as.data.frame(posterior_samples_Z)\n\n# Create a sequence of effect size (delta) values for the prior\ndelta_range_Z &lt;- seq(-3, 3, length.out = 1000)  # reasonable range for visualization\n\n# Compute the density of the default Cauchy prior (scale = 0.707)\nprior_density_Z &lt;- dcauchy(delta_range_Z, location = 0, scale = sqrt(2) / 2)\n\n# Create a data frame for the prior distribution\nprior_df_Z &lt;- data.frame(\n  delta = delta_range_Z,\n  density = prior_density_Z,\n  Distribution = \"Prior\"\n)\n\n# Compute the density of the posterior samples\nposterior_density_Z &lt;- density(posterior_df_Z$delta, adjust = 1.5)  # adjust can be tuned for smoothing\n\nposterior_df_density_Z &lt;- data.frame(\n  delta = posterior_density_Z$x,\n  density = posterior_density_Z$y,\n  Distribution = \"Posterior\"\n)\n\n# Combine prior and posterior data frames\ncombined_df_Z &lt;- rbind(prior_df_Z, posterior_df_density_Z)\n\n# Plot both distributions\nggplot(combined_df_Z, aes(x = delta, y = density, color = Distribution, fill = Distribution)) +\n  geom_line(size = 1) +\n  geom_area(alpha = 0.2, position = \"identity\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(\n    title = \"Prior and Posterior Distributions of Effect Size (δ)\",\n    subtitle = \"Zip: PM vs. CW\",\n    x = \"Effect Size (δ)\",\n    y = \"Density\"\n  ) +\n  scale_color_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  scale_fill_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n\nBayes factor computation for Pinpoint.\n\n\nShow the code\n# Filter out PM’s values (remove NA from 'value')\npp_pm &lt;- dat_longP %&gt;%\n  filter(Player == \"PM\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Filter out CW’s values (remove NA from 'value')\npp_cw &lt;- dat_longP %&gt;%\n  filter(Player == \"CW\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Run Bayesian two-sample t-test\nbf_obj_pp &lt;- ttestBF(\n  x = pp_pm,\n  y = pp_cw,\n  paired = FALSE\n)\n\n# extractBF() returns a data frame; the “bf” column is the numeric Bayes Factor\nbf_pp &lt;- extractBF(bf_obj_pp)$bf[1]\n\n# Build a simple one‐row data.frame for kable()\ndata.frame(\n  \"Game Type\" = \"Pinpoint\",\n  \"BF10\"      = round(bf_pp, 3),\n  \"Notes\"     = if (bf_pp &gt; 1) {\n                   \"Evidence favoring difference (H1)\"\n                 } else {\n                   \"Evidence favoring H0 or inconclusive\"\n                 }\n) %&gt;%\n  # Display as HTML table with caption and styling\n  kable(\n    caption   = \"Bayesian independent‐samples t‐test (Pinpoint)\",\n    col.names = c(\"Game Type\", \"BF₁₀\", \"Notes\"),\n    format    = \"html\"\n  ) %&gt;%\n  kable_styling(\n    full_width        = FALSE,\n    position          = \"center\",\n    bootstrap_options = c(\"striped\", \"hover\")\n  )\n\n\n\nBayesian independent‐samples t‐test (Pinpoint)\n\n\nGame Type\nBF₁₀\nNotes\n\n\n\n\nPinpoint\n4.712\nEvidence favoring difference (H1)\n\n\n\n\n\n\n\nVisualizations of posterior and prior distributions.\n\n\nShow the code\n# Obtain 10,000 posterior samples of the standardized effect size (delta)\nposterior_samples_pp &lt;- posterior(bf_obj_pp, iterations = 10000)\n\n# Convert to a data frame for easier handling\nposterior_df_pp &lt;- as.data.frame(posterior_samples_pp)\n\n# Create a sequence of effect size (delta) values for the prior\ndelta_range_pp &lt;- seq(-3, 3, length.out = 1000)  # reasonable range for visualization\n\n# Compute the density of the default Cauchy prior (scale = 0.707)\nprior_density_pp &lt;- dcauchy(delta_range_pp, location = 0, scale = sqrt(2) / 2)\n\n# Create a data frame for the prior distribution\nprior_df_pp &lt;- data.frame(\n  delta = delta_range_pp,\n  density = prior_density_pp,\n  Distribution = \"Prior\"\n)\n\n# Compute the density of the posterior samples\nposterior_density_pp &lt;- density(posterior_df_pp$delta, adjust = 1.5)  # adjust can be tuned for smoothing\n\nposterior_df_density_pp &lt;- data.frame(\n  delta = posterior_density_pp$x,\n  density = posterior_density_pp$y,\n  Distribution = \"Posterior\"\n)\n\n# Combine prior and posterior data frames\ncombined_df_pp &lt;- rbind(prior_df_pp, posterior_df_density_pp)\n\n# Plot both distributions\nggplot(combined_df_pp, aes(x = delta, y = density, color = Distribution, fill = Distribution)) +\n  geom_line(size = 1) +\n  geom_area(alpha = 0.2, position = \"identity\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(\n    title = \"Prior and Posterior Distributions of Effect Size (δ)\",\n    subtitle = \"Pinpoint: PM vs. CW\",\n    x = \"Effect Size (δ)\",\n    y = \"Density\"\n  ) +\n  scale_color_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  scale_fill_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n\nBayes factor computation for Crossclimb.\n\n\nShow the code\n# Filter out PM’s values (remove NA from 'value')\ncc_pm &lt;- dat_longC %&gt;%\n  filter(Player == \"PM\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Filter out CW’s values (remove NA from 'value')\ncc_cw &lt;- dat_longC %&gt;%\n  filter(Player == \"CW\", !is.na(value)) %&gt;%\n  pull(value)\n\n# Run Bayesian two-sample t-test\nbf_obj_cc &lt;- ttestBF(\n  x = cc_pm,\n  y = cc_cw,\n  paired = FALSE\n)\n\n# extractBF() returns a data frame; the “bf” column is the numeric Bayes Factor\nbf_cc &lt;- extractBF(bf_obj_cc)$bf[1]\n\n# Build a simple one‐row data.frame for kable()\ndata.frame(\n  \"Game Type\" = \"Crossclimb\",\n  \"BF10\"      = round(bf_cc, 3),\n  \"Notes\"     = if (bf_cc &gt; 1) {\n                   \"Evidence favoring difference (H1)\"\n                 } else {\n                   \"Evidence favoring H0 or inconclusive\"\n                 }\n) %&gt;%\n  # Display as HTML table with caption and styling\n  kable(\n    caption   = \"Bayesian independent‐samples t‐test (Crossclimb)\",\n    col.names = c(\"Game Type\", \"BF₁₀\", \"Notes\"),\n    format    = \"html\"\n  ) %&gt;%\n  kable_styling(\n    full_width        = FALSE,\n    position          = \"center\",\n    bootstrap_options = c(\"striped\", \"hover\")\n  )\n\n\n\nBayesian independent‐samples t‐test (Crossclimb)\n\n\nGame Type\nBF₁₀\nNotes\n\n\n\n\nCrossclimb\n0.357\nEvidence favoring H0 or inconclusive\n\n\n\n\n\n\n\nVisualizations of posterior and prior distributions.\n\n\nShow the code\n# Obtain 10,000 posterior samples of the standardized effect size (delta)\nposterior_samples_cc &lt;- posterior(bf_obj_cc, iterations = 10000)\n\n# Convert to a data frame for easier handling\nposterior_df_cc &lt;- as.data.frame(posterior_samples_cc)\n\n# Create a sequence of effect size (delta) values for the prior\ndelta_range_cc &lt;- seq(-3, 3, length.out = 1000)  # reasonable range for visualization\n\n# Compute the density of the default Cauchy prior (scale = 0.707)\nprior_density_cc &lt;- dcauchy(delta_range_cc, location = 0, scale = sqrt(2) / 2)\n\n# Create a data frame for the prior distribution\nprior_df_cc &lt;- data.frame(\n  delta = delta_range_cc,\n  density = prior_density_cc,\n  Distribution = \"Prior\"\n)\n\n# Compute the density of the posterior samples\nposterior_density_cc &lt;- density(posterior_df_cc$delta, adjust = 1.5)  # adjust can be tuned for smoothing\n\nposterior_df_density_cc &lt;- data.frame(\n  delta = posterior_density_cc$x,\n  density = posterior_density_cc$y,\n  Distribution = \"Posterior\"\n)\n\n# Combine prior and posterior data frames\ncombined_df_cc &lt;- rbind(prior_df_cc, posterior_df_density_cc)\n\n# Plot both distributions\nggplot(combined_df_cc, aes(x = delta, y = density, color = Distribution, fill = Distribution)) +\n  geom_line(size = 1) +\n  geom_area(alpha = 0.2, position = \"identity\") +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(\n    title = \"Prior and Posterior Distributions of Effect Size (δ)\",\n    subtitle = \"Crossclimb: PM vs. CW\",\n    x = \"Effect Size (δ)\",\n    y = \"Density\"\n  ) +\n  scale_color_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  scale_fill_manual(values = c(\"Prior\" = \"#00CFC1\", \"Posterior\" = \"#FF6B5C\")) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ho Chin Wei",
    "section": "",
    "text": "LinkedIn\n  \n  \n      ResearchGate\n  \n  \n     \n  \n  \n      Github\n  \n  \n      ORCID\n  \n\n  \n  \nHello, I am Chin Wei.\nI’m currently a MSc psychology researcher at the University of Hull, as part of the prestigious White Rose Doctoral Training Partnership (WRDTP).\nBefore this, I completed my Bachelor’s degree in Psychology at Nanyang Technological University, Singapore, where I was honoured the title NTU President Research Scholar for two consecutive years, thanks to my work in the Undergraduate Research Experience on Campus (URECA) programme.\nI had the opportunity to lead two independent, year-long research projects under the guidance of faculty mentors, solidifying my love for all things research.\nIn this template you can find examples of using listing (grid, table, default) in Projects, Talks, Blog. Read more about lists here."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "contact",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "blog/welcome/index.html",
    "href": "blog/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about_template.html",
    "href": "about_template.html",
    "title": "About this template",
    "section": "",
    "text": "About this template\n\n\n\nThis page contains some elaborated background information about your workshop, or the instructors.\n\n\nThis is to demonstrate how to make a drop-down page from the navigation bar."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Ho Chin Wei",
    "section": "",
    "text": "I am a PhD student at the University of Hull, UK.\nMy research area broadly lies in understanding human behavior interacting with AI-technologies. More specifically, my PhD project focuses on misinformation from AI-Imagery, and how do we cognitively process AI-images differently than “Real” images. I have a more diverse list of topics I am interested in (e.g., Effects of AI-pornography, discussions around what is “real” or “fake” information etc. - Refer to my blog for more!)\n\n\nUniversity of Hull | Hull, United Kingdom\nMSc in Social Research | Oct 2022\nBSc in Social Sciences in Psychology | June 2024\n\n\n\nI have developed X R packages, published Y papers.\n\n \n    \n  \n      LinkedIn\n  \n  \n      ResearchGate\n  \n  \n     \n  \n  \n      Github\n  \n  \n      ORCID"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Ho Chin Wei",
    "section": "",
    "text": "University of Hull | Hull, United Kingdom\nMSc in Social Research | Oct 2022\nBSc in Social Sciences in Psychology | June 2024"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Ho Chin Wei",
    "section": "",
    "text": "I have developed X R packages, published Y papers."
  },
  {
    "objectID": "blog/post-with-code/index.html",
    "href": "blog/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Chin Wei’s Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 25, 2022\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\nHello, this is the description to my blog\n\n\n\n\n\nOct 22, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "CV.html",
    "href": "CV.html",
    "title": "CV",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "It is convenient to use id to link to multiple folders.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/index.html#analysis-projects",
    "href": "projects/index.html#analysis-projects",
    "title": "Projects",
    "section": "",
    "text": "It is convenient to use id to link to multiple folders.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/index.html#table-listing",
    "href": "projects/index.html#table-listing",
    "title": "Projects",
    "section": "Table listing",
    "text": "Table listing\nThis is an example of table listing.\n\nPackages\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\npkg_1\n\n\n\n\n\n\n\npkg_2\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/pkg_1/index.html",
    "href": "projects/pkg_1/index.html",
    "title": "pkg_1",
    "section": "",
    "text": "This package does this."
  },
  {
    "objectID": "projects/project_1/index.html",
    "href": "projects/project_1/index.html",
    "title": "project_1",
    "section": "",
    "text": "In this project I use EHR to explore the hospital transfers."
  }
]