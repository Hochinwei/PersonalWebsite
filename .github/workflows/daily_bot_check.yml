name: Daily Telegram Bot Check

# 1) Give GITHUB_TOKEN write access to repo contents
permissions:
  contents: write

on:
  schedule:
    # Every day at 09:00 UTC (adjust if you want a different time)
    - cron: '0 9 * * *'
  workflow_dispatch:    # allows manual trigger

jobs:
  run_bot:
    # 1) Run on the latest Ubuntu runner
    runs-on: ubuntu-latest

    # 2) IMPORTANT: tell Actions to cd into the LinkedIn_games folder
    defaults:
      run:
        working-directory: projects/LinkedIn_games

    steps:
      # 3) Checkout the entire repo
      - name: Checkout repository
        uses: actions/checkout@v3
        
      #Install system dependencies
      - name: Install system deps (curl, ssl, xml)
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # 4) Setup R (using r-lib setup)
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'

      # 5) Install required R packages
      - name: Install R packages
        run: |
          Rscript -e "install.packages(c('telegram.bot','openxlsx'), repos='https://cloud.r-project.org')"

      # 6) Run the bot script (which is now in the “LinkedIn_games” subfolder)
      - name: Run datacollect.R
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          Rscript datacollect.R
          
      # 7) Commit & push changes (if any) back to the repo
      - name: Commit and push updated Excel
        if: always()    # run even if previous steps failed or made no changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
  
          git add LinkedIn_games_data.xlsx last_update_id.txt || echo "No changes to commit"
          git diff --cached --quiet || (
            git commit -m "chore: update game data via workflow"
            git push origin HEAD:main
          )
